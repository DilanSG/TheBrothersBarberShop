# ============================================# ========================================# ========================================# ========================================

# .gitignore - The Brothers Barber Shop

# Optimizado para Vercel (Frontend) + Render (Backend)# THE BROTHERS BARBER SHOP - .gitignore

# ============================================

# ========================================# THE BROTHERS BARBER SHOP - .gitignore# THE BROTHERS BARBER SHOP - .gitignore

# ==========================================

# DEPENDENCIAS Y MÓDULOS

# ==========================================

node_modules/# =================# ========================================# ========================================

npm-debug.log*

yarn-debug.log*# DEPENDENCIES

yarn-error.log*

pnpm-debug.log*# =================

package-lock.json

yarn.locknode_modules/

pnpm-lock.yaml

.pnpm-store/npm-debug.log*# =================# =================



# ==========================================yarn-debug.log*

# VARIABLES DE ENTORNO Y CONFIGURACIÓN

# ==========================================yarn-error.log*# DEPENDENCIES# DEPENDENCIES

.env

.env.localpnpm-debug.log*

.env.development.local

.env.test.locallerna-debug.log*# =================# =================

.env.production.local

.env.*.local.pnpm-debug.log*

*.env

node_modules/node_modules/

# Mantener archivos de ejemplo

!.env.example# =================

!.env.production.example

# LOCK FILESnpm-debug.log*npm-debug.log*

# ==========================================

# ARCHIVOS DE LOGS Y MONITOREO# =================

# ==========================================

logs/package-lock.jsonyarn-debug.log*yarn-debug.log*

*.log

npm-debug.log*yarn.lock

yarn-debug.log*

yarn-error.log*pnpm-lock.yamlyarn-error.log*yarn-error.log*

lerna-debug.log*

.npm



# Winston logs (backend)# =================pnpm-debug.log*pnpm-debug.log*

backend/logs/

backend/*.log# ENVIRONMENT FILES

combined.log

error.log# =================lerna-debug.log*lerna-debug.log*

exceptions.log

rejections.log.env

http.log

.env.local.pnpm-debug.log*package-lock.json

# ==========================================

# BUILDS Y ARCHIVOS DE PRODUCCIÓN.env.development.local

# ==========================================

dist/.env.test.localyarn.lock

build/

out/.env.production.local

.next/

.nuxt/.env.*.local# =================pnpm-lock.yaml

.cache/

.parcel-cache/



# Frontend builds# =================# ENVIRONMENT FILES

frontend/dist/

frontend/build/# BUILD OUTPUTS

frontend/.vite/

frontend/.vercel/# =================# =================# =================



# Backend buildsdist/

backend/dist/

backend/build/build/.env# ENVIRONMENT FILES



# ==========================================out/

# BASES DE DATOS Y BACKUPS

# ==========================================.next/.env.local# =================

*.sqlite

*.sqlite3.nuxt/

*.db

*.db-journal.cache/.env.development.local.env



# MongoDB backups*.tsbuildinfo

backend/backups/

backups/.env.test.local.env.local

*.dump

*.bson# =================



# ==========================================# LOGS & RUNTIME.env.production.local.env.development.local

# ARCHIVOS TEMPORALES Y CACHE

# ==========================================# =================

.DS_Store

.DS_Store?logs/.env.*.local.env.test.local

._*

.Spotlight-V100*.log

.Trashes

ehthumbs.dbnpm-debug.log*.env.production.local

Thumbs.db

*.swpyarn-debug.log*

*.swo

*~yarn-error.log*# =================.env.*.local

.idea/

.vscode/*lerna-debug.log*

!.vscode/settings.json

!.vscode/tasks.jsonpids# BUILD OUTPUTS

!.vscode/launch.json

!.vscode/extensions.json*.pid



# Cache de editores*.seed# =================# =================

*.suo

*.ntvs**.pid.lock

*.njsproj

*.sln.gruntdist/# BUILD OUTPUTS

*.sw?

.lock-wscript

# ==========================================

# UPLOADS Y ARCHIVOS DE USUARIObuild/# =================

# ==========================================

uploads/# =================

uploads/temp/

backend/uploads/# TESTING & COVERAGEout/dist/

backend/uploads/temp/

public/uploads/# =================



# Mantener directorios necesarios con .gitkeepcoverage/.next/build/

!uploads/.gitkeep

!backend/uploads/.gitkeep*.lcov

!backend/uploads/temp/.gitkeep

.nyc_output.nuxt/out/

# ==========================================

# TESTING Y COVERAGEjest-coverage/

# ==========================================

coverage/cypress/videos/.cache/.next/

*.lcov

.nyc_output/cypress/screenshots/

.coverage

.pytest_cache/test-results/*.tsbuildinfo.nuxt/

.jest/

playwright-report/

# Test results

test-results/.cache/

junit.xml

# =================

# ==========================================

# VERCEL (FRONTEND DEPLOYMENT)# CACHING# =================*.tsbuildinfo

# ==========================================

.vercel# =================

.vercel.json

*.vercel-build-output/.npm/# LOGS & RUNTIME



# ==========================================.yarn/

# RENDER (BACKEND DEPLOYMENT)

# ==========================================.cache/# =================# =================

.render/

.eslintcache

# ==========================================

# DOCKER (SI SE USA EN DESARROLLO).stylelintcachelogs/# LOGS & RUNTIME

# ==========================================

.dockerignore.rpt2_cache/

Dockerfile.dev

docker-compose.override.yml.rts2_cache_cjs/*.log# =================

docker-compose.dev.yml

.rts2_cache_es/

# ==========================================

# CLOUDINARY Y SERVICIOS EXTERNOS.rts2_cache_umd/npm-debug.log*logs/

# ==========================================

cloudinary-config.json



# ==========================================# =================yarn-debug.log**.log

# CERTIFICADOS Y CLAVES

# ==========================================# UPLOADS & TEMP FILES

*.pem

*.key# =================yarn-error.log*npm-debug.log*

*.cert

*.crtuploads/temp/**

*.p12

*.pfxuploads/*.tmplerna-debug.log*yarn-debug.log*

ssl/

certs/*.tmp



# ==========================================*.temppidsyarn-error.log*

# ARCHIVOS DE SISTEMA OPERATIVO

# ==========================================.tmp/

# Windows

Thumbs.dbtemp/*.pidlerna-debug.log*

ehthumbs.db

Desktop.ini

$RECYCLE.BIN/

# =================*.seedpids

# macOS

.DS_Store# DATABASE & BACKUPS

.AppleDouble

.LSOverride# =================*.pid.lock*.pid

._*

*.sqlite

# Linux

*~*.sqlite3.grunt*.seed

.directory

.Trash-**.db



# ==========================================backup/.lock-wscript*.pid.lock

# IDEs Y EDITORES

# ==========================================dumps/

# VSCode

.vscode/*.grunt

!.vscode/settings.json

!.vscode/tasks.json# =================

!.vscode/launch.json

!.vscode/extensions.json# DEVELOPMENT TOOLS# =================.lock-wscript

!.vscode/*.code-snippets

.history/# =================

*.vsix

.vscode/settings.json# TESTING & COVERAGE

# JetBrains (WebStorm, IntelliJ, etc.)

.idea/.vscode/launch.json

*.iml

*.iws.idea/# =================# =================

*.ipr

out/*.swp



# Sublime Text*.swocoverage/# TESTING & COVERAGE

*.sublime-workspace

*.sublime-project*~



# Vim*.lcov# =================

[._]*.s[a-v][a-z]

[._]*.sw[a-p]# =================

[._]s[a-rt-v][a-z]

[._]ss[a-gi-z]# DEPLOYMENT.nyc_outputcoverage/

[._]sw[a-p]

# =================

# ==========================================

# SCRIPTS DE DESARROLLO OBSOLETOS.vercel/jest-coverage/*.lcov

# ==========================================

*.backup.netlify/

*.old

*.temp.surge/cypress/videos/.nyc_output

*.tmp

*.bak.pm2/

*-old.*

*-backup.*ecosystem.config.jscypress/screenshots/jest-coverage/



# ==========================================

# ARCHIVOS DE DOCUMENTACIÓN TEMPORAL

# ==========================================# =================test-results/cypress/videos/

TODO.md

NOTES.md# CLOUD SERVICES

scratch.md

# =================playwright-report/cypress/screenshots/

# ==========================================

# DATOS SENSIBLES Y ESPECÍFICOS.aws/

# ==========================================

# Secrets de Render/Vercel.gcp/test-results/

secrets.json

credentials.json.azure/



# Archivos de sesión# =================playwright-report/

sessions/

*.session# =================



# Archivos de configuración local# MISCELLANEOUS# CACHINGtest-results/

config.local.js

config.local.json# =================



# ==========================================.DS_Store# =================

# ARCHIVOS GENERADOS AUTOMÁTICAMENTE

# ==========================================.DS_Store?

# Sourcemaps de producción (opcional, comentar si se necesitan)

*.map._*.npm/# =================



# Archivos de tipo de TypeScript.Spotlight-V100

*.tsbuildinfo

.Trashes.yarn/# CACHING

# ==========================================

# ANÁLISIS Y REPORTESehthumbs.db

# ==========================================

.eslintcacheThumbs.db.cache/# =================

.stylelintcache

*.report.json*.orig

stats.json

bundle-analyzer-report.html.eslintcache.npm/



# ==========================================# =================

# REDIS (SI SE USA LOCALMENTE)

# ==========================================# PROJECT SPECIFIC.stylelintcache.yarn/

dump.rdb

appendonly.aof# =================

redis.conf

# Debug files específicos del proyecto.rpt2_cache/.cache/

# ==========================================

# MISCELÁNEOSdebug-*.js

# ==========================================

*.seedtest-*.js.rts2_cache_cjs/.eslintcache

*.pid

*.pid.locktemp_*.js

.venv/

venv/.rts2_cache_es/.stylelintcache

ENV/

env/# Archivos de configuración temporales

.Python

config.temp.js.rts2_cache_umd/.rpt2_cache/

*.config.bak

.rts2_cache_cjs/

# Documentación generada automáticamente

docs/api/# =================.rts2_cache_es/

storybook-static/

# UPLOADS & TEMP FILES.rts2_cache_umd/

# =================

# SECURITY# =================.rts2_cache_cjs/

# =================

# Certificados y clavesuploads/temp/**.rts2_cache_es/

*.pem

*.keyuploads/*.tmp.rts2_cache_umd/

*.cert

*.crt*.tmp

*.p12

*.pfx*.temp# Optional REPL history



# Archivos de secretos.tmp/.node_repl_history

secrets/

private/temp/

.secrets/

# Output of 'npm pack'

# =================

# BACKEND SPECIFIC# =================*.tgz

# =================

backend/uploads/# DATABASE & BACKUPS

backend/src/config/database.js

backend/temp/# =================# Yarn Integrity file

backend/logs/

*.sqlite.yarn-integrity

# =================

# FRONTEND SPECIFIC*.sqlite3

# =================

frontend/dist/*.db# dotenv environment variable files

frontend/build/

backup/.env

# =================

# PRODUCTION BUILDdumps/.env.development.local

# =================

# GitHub Pages se sirve desde /docs/.env.test.local

docs/

# =================.env.production.local

# =================

# OPTIONAL FILES# DEVELOPMENT TOOLS.env.local

# =================

# Optional npm cache directory# =================

.npm

.vscode/settings.json# parcel-bundler cache (https://parceljs.org/)

# Optional REPL history

.node_repl_history.vscode/launch.json.cache



# Output of 'npm pack'.idea/.parcel-cache

*.tgz

*.swp

# Yarn Integrity file

.yarn-integrity*.swo# Next.js build output



# parcel-bundler cache*~.next

.parcel-cache

out

# Next.js build output

.next# =================

out

# DEPLOYMENT# Nuxt.js build / generate output

# Nuxt.js build / generate output

.nuxt# =================.nuxt

dist

.vercel/dist

# Gatsby files

.cache/.netlify/

public

.surge/# Gatsby files

# Vite build output

dist/.pm2/.cache/



# Rollup build outputecosystem.config.jspublic

build/



# Serverless directories

.serverless/# =================# Vite build output



# FuseBox cache# CLOUD SERVICESdist/

.fusebox/

# =================

# DynamoDB Local files

.dynamodb/.aws/# Rollup build output



# TernJS port file.gcp/build/

.tern-port

.azure/

# Stores VSCode versions used for testing VSCode extensions

.vscode-test# Serverless directories



# yarn v2# =================.serverless/

.yarn/cache

.yarn/unplugged# MISCELLANEOUS

.yarn/build-state.yml

.yarn/install-state.gz# =================# FuseBox cache

.pnp.*

.DS_Store.fusebox/

# Redis dump

dump.rdb.DS_Store?



# MongoDB data._*# DynamoDB Local files

data/

.Spotlight-V100.dynamodb/

# Error files

error.log.Trashes

access.log

ehthumbs.db# TernJS port file

# PM2 files

.pm2/Thumbs.db.tern-port



# Docker files*.orig

docker-compose.override.yml

.dockerignore# Stores VSCode versions used for testing VSCode extensions



# Sentry files# =================.vscode-test

.sentryclirc

# PROJECT SPECIFIC

# Rush files

common/temp/# =================# yarn v2



# Webpack# Debug files específicos del proyecto.yarn/cache

webpack-stats.json

debug-*.js.yarn/unplugged

# Jest backup files

jest.config.js.baktest-*.js.yarn/build-state.yml

temp_*.js.yarn/install-state.gz

.pnp.*

# Archivos de configuración temporales

config.temp.js# IDE files

*.config.bak.vscode/

.idea/

# Documentación generada automáticamente*.swp

docs/api/*.swo

storybook-static/*~



# =================# OS generated files

# SECURITY.DS_Store

# =================.DS_Store?

# Certificados y claves._*

*.pem.Spotlight-V100

*.key.Trashes

*.certehthumbs.db

*.crtThumbs.db

*.p12

*.pfx# Logs

logs

# Archivos de secretos*.log

secrets/

private/# Backend specific

.secrets/backend/uploads/
backend/src/config/database.js
backend/temp/
backend/logs/

# Frontend specific
frontend/dist/
frontend/build/

# Production build (GitHub Pages se sirve desde /docs/)
docs/

# Testing
coverage/
cypress/videos/
cypress/screenshots/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Lock files (mantener solo uno)
package-lock.json
yarn.lock

# Redis dump
dump.rdb

# MongoDB data
data/

# SSL certificates
*.pem
*.key
*.crt
*.cert

# Backup files
*.backup
*.bak

# Error files
error.log
access.log

# Cache directories
.cache/
.npm/
.yarn/

# Build artifacts
build/
dist/
out/

# Documentation generated files
docs/api/
docs/coverage/

# PM2 files
ecosystem.config.js
.pm2/

# Docker files (si se usan en el futuro)
docker-compose.override.yml
.dockerignore

# Cloud function files
.netlify/
.vercel/
.surge/

# Sentry files
.sentryclirc

# Storybook files
storybook-static/

# Rush files
common/temp/

# ESLint and Prettier cache
.eslintcache
.prettierignore

# Webpack
webpack-stats.json

# Jest
coverage/
jest.config.js.bak

# Cypress
cypress/fixtures/examples.json