# =====================================================
# RENDER DEPLOYMENT CONFIGURATION
# =====================================================
# 
# üìã CONFIGURACI√ìN PARA RENDER.COM
# Este archivo define el servicio backend en Render
# 
# üöÄ INSTRUCCIONES DE DEPLOY:
# 1. Crear cuenta en render.com
# 2. Conectar repositorio GitHub 
# 3. Usar esta configuraci√≥n autom√°ticamente
# =====================================================

services:
  # Backend API Service
  - type: web
    name: barbershop-api
    env: node
    region: oregon  # Cambiar seg√∫n tu ubicaci√≥n
    plan: starter   # Plan gratuito por 90 d√≠as, luego $7/mes
    
    # Build Configuration
    buildCommand: |
      echo "üîß Instalando dependencias..."
      cd backend
      npm ci --only=production
      echo "‚úÖ Build completado"
    
    # Start Command
    startCommand: |
      echo "üöÄ Iniciando servidor..."
      cd backend
      npm start
    
    # Health Check
    healthCheckPath: /health
    
    # Auto Deploy
    autoDeploy: true  # Deploy autom√°tico en push a main
    
    # Environment Variables
    # IMPORTANTE: Configurar en Render Dashboard > Environment
    envVars:
      - key: NODE_ENV
        value: production
      
      - key: PORT
        value: 10000  # Puerto que usa Render
        
      # Variables que se configuran en Render UI (no aqu√≠):
      # MONGODB_URI - Connection string de MongoDB Atlas
      # JWT_SECRET - Secreto seguro para JWT
      # CLOUDINARY_CLOUD_NAME - Tu cloud name
      # CLOUDINARY_API_KEY - Tu API key  
      # CLOUDINARY_API_SECRET - Tu API secret
      # FRONTEND_URL - URL de Vercel una vez desplegado
      
    # Disk Storage (para logs temporales)
    disk:
      name: logs
      mountPath: /opt/render/project/src/backend/logs
      sizeGB: 1

# =====================================================
# CONFIGURACI√ìN ADICIONAL
# =====================================================

# Domains (configurar despu√©s del primer deploy)
# domains:
#   - name: api.tudominio.com
#     type: apex

# Notifications (opcional)
# notifications:
#   - type: email
#     emails:
#       - tu-email@gmail.com
#     events:
#       - deploy-success
#       - deploy-failure