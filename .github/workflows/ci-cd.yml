name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # ====================================
  # JOB 1: LINTING
  # ====================================
  lint:
    name: 🔍 Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: 📦 Install Backend Dependencies
        run: npm ci
        working-directory: ./backend

      - name: 📦 Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend

      - name: 🔍 Lint Backend
        run: npm run lint
        working-directory: ./backend
        continue-on-error: true

      - name: 🔍 Lint Frontend
        run: npm run lint
        working-directory: ./frontend
        continue-on-error: true

  # ====================================
  # JOB 2: TESTING
  # ====================================
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install Backend Dependencies
        run: npm ci
        working-directory: ./backend

      - name: 🧪 Run Unit Tests
        run: npm run test:unit
        working-directory: ./backend
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-ci
          MONGODB_URI: mongodb://localhost:27017/test

      - name: 📊 Generate Coverage Report
        run: npm run test:coverage
        working-directory: ./backend
        continue-on-error: true

      - name: 📈 Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
        continue-on-error: true

  # ====================================
  # JOB 3: BUILD BACKEND
  # ====================================
  build-backend:
    name: 🔨 Build Backend
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci
        working-directory: ./backend

      - name: ✅ Validate Backend Structure
        run: |
          echo "Validating backend structure..."
          test -f src/index.js
          test -f package.json
          echo "✅ Backend structure validated"
        working-directory: ./backend

  # ====================================
  # JOB 4: BUILD FRONTEND
  # ====================================
  build-frontend:
    name: 🎨 Build Frontend
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci
        working-directory: ./frontend

      - name: 🏗️ Build Frontend (Vite)
        run: npm run build
        working-directory: ./frontend
        env:
          VITE_API_URL: https://api.thebrothersbarbers.com

      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist
          retention-days: 7

  # ====================================
  # JOB 5: DEPLOY TO VERCEL (Production)
  # ====================================
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://thebrothersbarbers.vercel.app
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy Frontend to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

      - name: 📢 Deployment Notification
        run: |
          echo "✅ Deployment to production completed successfully!"
          echo "🌐 URL: https://thebrothersbarbers.vercel.app"

  # ====================================
  # JOB 6: DEPLOY TO VERCEL (Preview)
  # ====================================
  deploy-preview:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Deploy Preview to Vercel
        uses: amondnet/vercel-action@v25
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend

      - name: 💬 Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🔍 Preview Deployment Ready!\n\n✅ Your preview is available at:\n**${{ steps.vercel-deploy.outputs.preview-url }}**\n\n---\n*Deployed from commit: ${context.sha.substring(0, 7)}*`
            })

  # ====================================
  # JOB 7: SECURITY AUDIT
  # ====================================
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '18'

      - name: 🔒 Audit Backend Dependencies
        run: npm audit --audit-level=high
        working-directory: ./backend
        continue-on-error: true

      - name: 🔒 Audit Frontend Dependencies
        run: npm audit --audit-level=high
        working-directory: ./frontend
        continue-on-error: true
