name: Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  test:
    name: ðŸ§ª Run Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v5

      - name: ðŸ”§ Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: ðŸ“¦ Install Dependencies
        run: npm ci
        working-directory: ./backend

      - name: ðŸ§ª Run Unit Tests
        run: npm run test:unit
        working-directory: ./backend
        env:
          NODE_ENV: test
          JWT_SECRET: test-jwt-secret-for-ci-pipeline
          JWT_EXPIRES_IN: 1h
          JWT_REFRESH_EXPIRES_IN: 7d
          MONGODB_URI: mongodb://localhost:27017/barber-shop-test

      - name: ðŸ“Š Generate Coverage Report
        if: matrix.node-version == '18.x'
        run: npm run test:coverage
        working-directory: ./backend
        continue-on-error: true

      - name: ðŸ“¤ Upload Coverage Artifact
        if: matrix.node-version == '18.x'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage
          retention-days: 7
        continue-on-error: true

      - name: ðŸ“ˆ Upload Coverage to Codecov
        if: matrix.node-version == '18.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info
          flags: unit-tests
          name: backend-unit-tests
          fail_ci_if_error: false
        continue-on-error: true

      - name: âœ… Test Summary
        if: always()
        run: |
          echo "## ðŸ§ª Test Results"
          echo "Node Version: ${{ matrix.node-version }}"
          echo "Status: ${{ job.status }}"
          echo ""
          echo "Tests completed successfully!" >> $GITHUB_STEP_SUMMARY
